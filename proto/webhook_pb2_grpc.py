# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import proto.webhook_pb2 as webhook__pb2


class WebhookServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Register = channel.unary_unary(
            '/WebhookService/Register',
            request_serializer=webhook__pb2.WebhookRegistrationRequest.SerializeToString,
            response_deserializer=webhook__pb2.WebhookRegistrationResponse.FromString,
        )
        self.Unregister = channel.unary_unary(
            '/WebhookService/Unregister',
            request_serializer=webhook__pb2.WebhookRegistrationRequest.SerializeToString,
            response_deserializer=webhook__pb2.WebhookRegistrationResponse.FromString,
        )
        self.Inquire = channel.unary_unary(
            '/WebhookService/Inquire',
            request_serializer=webhook__pb2.WebhookInquireRequest.SerializeToString,
            response_deserializer=webhook__pb2.WebhookInquireResponse.FromString,
        )
        self.DeleteAll = channel.unary_unary(
            '/WebhookService/DeleteAll',
            request_serializer=webhook__pb2.Empty.SerializeToString,
            response_deserializer=webhook__pb2.WebhookDeleteAllResponse.FromString,
        )
        self.GetHistory = channel.unary_unary(
            '/WebhookService/GetHistory',
            request_serializer=webhook__pb2.WebhookGetHistoryRequest.SerializeToString,
            response_deserializer=webhook__pb2.WebhookGetHistoryResponse.FromString,
        )


class WebhookServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Register(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Unregister(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Inquire(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteAll(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetHistory(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_WebhookServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'Register': grpc.unary_unary_rpc_method_handler(
            servicer.Register,
            request_deserializer=webhook__pb2.WebhookRegistrationRequest.FromString,
            response_serializer=webhook__pb2.WebhookRegistrationResponse.SerializeToString,
        ),
        'Unregister': grpc.unary_unary_rpc_method_handler(
            servicer.Unregister,
            request_deserializer=webhook__pb2.WebhookRegistrationRequest.FromString,
            response_serializer=webhook__pb2.WebhookRegistrationResponse.SerializeToString,
        ),
        'Inquire': grpc.unary_unary_rpc_method_handler(
            servicer.Inquire,
            request_deserializer=webhook__pb2.WebhookInquireRequest.FromString,
            response_serializer=webhook__pb2.WebhookInquireResponse.SerializeToString,
        ),
        'DeleteAll': grpc.unary_unary_rpc_method_handler(
            servicer.DeleteAll,
            request_deserializer=webhook__pb2.Empty.FromString,
            response_serializer=webhook__pb2.WebhookDeleteAllResponse.SerializeToString,
        ),
        'GetHistory': grpc.unary_unary_rpc_method_handler(
            servicer.GetHistory,
            request_deserializer=webhook__pb2.WebhookGetHistoryRequest.FromString,
            response_serializer=webhook__pb2.WebhookGetHistoryResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'WebhookService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))

 # This class is part of an EXPERIMENTAL API.


class WebhookService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Register(request,
                 target,
                 options=(),
                 channel_credentials=None,
                 call_credentials=None,
                 insecure=False,
                 compression=None,
                 wait_for_ready=None,
                 timeout=None,
                 metadata=None):
        return grpc.experimental.unary_unary(request, target, '/WebhookService/Register',
                                             webhook__pb2.WebhookRegistrationRequest.SerializeToString,
                                             webhook__pb2.WebhookRegistrationResponse.FromString,
                                             options, channel_credentials,
                                             insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Unregister(request,
                   target,
                   options=(),
                   channel_credentials=None,
                   call_credentials=None,
                   insecure=False,
                   compression=None,
                   wait_for_ready=None,
                   timeout=None,
                   metadata=None):
        return grpc.experimental.unary_unary(request, target, '/WebhookService/Unregister',
                                             webhook__pb2.WebhookRegistrationRequest.SerializeToString,
                                             webhook__pb2.WebhookRegistrationResponse.FromString,
                                             options, channel_credentials,
                                             insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Inquire(request,
                target,
                options=(),
                channel_credentials=None,
                call_credentials=None,
                insecure=False,
                compression=None,
                wait_for_ready=None,
                timeout=None,
                metadata=None):
        return grpc.experimental.unary_unary(request, target, '/WebhookService/Inquire',
                                             webhook__pb2.WebhookInquireRequest.SerializeToString,
                                             webhook__pb2.WebhookInquireResponse.FromString,
                                             options, channel_credentials,
                                             insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteAll(request,
                  target,
                  options=(),
                  channel_credentials=None,
                  call_credentials=None,
                  insecure=False,
                  compression=None,
                  wait_for_ready=None,
                  timeout=None,
                  metadata=None):
        return grpc.experimental.unary_unary(request, target, '/WebhookService/DeleteAll',
                                             webhook__pb2.Empty.SerializeToString,
                                             webhook__pb2.WebhookDeleteAllResponse.FromString,
                                             options, channel_credentials,
                                             insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetHistory(request,
                   target,
                   options=(),
                   channel_credentials=None,
                   call_credentials=None,
                   insecure=False,
                   compression=None,
                   wait_for_ready=None,
                   timeout=None,
                   metadata=None):
        return grpc.experimental.unary_unary(request, target, '/WebhookService/GetHistory',
                                             webhook__pb2.WebhookGetHistoryRequest.SerializeToString,
                                             webhook__pb2.WebhookGetHistoryResponse.FromString,
                                             options, channel_credentials,
                                             insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
